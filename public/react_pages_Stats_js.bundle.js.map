{"version":3,"file":"react_pages_Stats_js.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAIA;;AAEA;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAEA;;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;AAEA;AACA;AAEA;AAEA;AACA;;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;;;AAEA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAMA;;AAEA;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAKA;;AAEA;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAEA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AADA;AAIA;AACA;AAEA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAhBA;AAmBA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA","sources":["webpack://ad-manager/./react/layouts/Footer.js","webpack://ad-manager/./react/layouts/Header.js","webpack://ad-manager/./react/layouts/Page.js","webpack://ad-manager/./react/pages/Stats.js","webpack://ad-manager/./react/utility/Api.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div>\r\n        <span>Copyright &copy; 2021 Fumigation Solutions </span>\r\n        <span>Developed by <a href=\"https://afriblocks.com\">AfriBlocks</a></span>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { GlobalContext } from '../GlobalContext';\r\n\r\nconst Header = ({title, active}) => {\r\n\r\nconst { logout } = useContext(GlobalContext);\r\n\r\nconst activeLink = (identifier) => {\r\n  let classes = \"btn btn-sm pd-x-15 btn-white btn-uppercase mg-l-5\";\r\n\r\n  if(identifier === active) classes += \" active-link\";\r\n\r\n  return classes;\r\n}\r\n\r\n  return (\r\n    <>\r\n      <center><img src=\"/logo.jpg\" style={{maxWidth:'100%',marginBottom:30}}/></center>\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mg-b-20 mg-lg-b-25 mg-xl-b-30\">\r\n        <div>\r\n          <h1 className=\"mg-b-0 tx-spacing--1\">{title}</h1>\r\n        </div>\r\n        <div className=\"d-none d-md-block\">\r\n          <Link to=\"/\" className={activeLink(\"dashboard\")}>Dashboard</Link>\r\n          <Link to=\"/slots\" className={activeLink(\"slots\")}>Slots</Link>\r\n          <Link to=\"/ads\" className={activeLink(\"ads\")}>Ads</Link>\r\n          <button onClick={() => logout()} className=\"btn btn-sm pd-x-15 btn-primary btn-uppercase mg-l-5\" style={{backgroundColor:'#000', borderColor: '#000'}}><i data-feather=\"link\" className=\"wd-10 mg-r-5\"></i> Logout</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n// Header.defaultProps = {\r\n//   title: \"Dashboard\"\r\n// };\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  active: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\n\r\nconst Page = (props) => {\r\n  return (\r\n    <>\r\n    <div className=\"content content-fixed\">\r\n      <div className=\"container pd-x-0 pd-lg-x-10 pd-xl-x-0\">\r\n          {props.children}\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;","import React, { useState, useEffect } from 'react';\r\nimport Page from '../layouts/Page';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ApiRequest } from '../utility/Api';\r\nimport { AppConst } from '../Config';\r\n\r\nconst Stats = () => {\r\n  return (\r\n    <Page>\r\n      <h1>Slots</h1>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Stats;","import axios from 'axios';\r\nimport { API_URL } from '../Config';\r\n\r\nconst API = axios.create({ baseURL: API_URL, responseType: 'json' });\r\n\r\nconst setHeaders = (token, contentType) => {\r\n\r\n  let headers = {\r\n    Accept: \"application/json\"\r\n  }\r\n\r\n  if (contentType) headers[\"Content-Type\"] = contentType;\r\n  if (token) headers.Authorization = `Bearer ${token}`;\r\n\r\n  return { headers };\r\n}\r\n\r\nexport const ApiRequest = {\r\n  get: ({ baseUrl = null, endpoint, token = null, contentType = null, success, failure }) => {\r\n    if (baseUrl) API.defaults.baseURL = baseUrl;\r\n    return API.get(endpoint, setHeaders(token, contentType))\r\n      .then(async (response) => await success(response))\r\n      .catch((error) => failure(error));\r\n  },\r\n  post: ({ endpoint, token = null, contentType = null, data, success, failure }) => {\r\n    return API.post(endpoint, data, setHeaders(token, contentType))\r\n      .then(async (response) => await success(response))\r\n      .catch((error) => failure(error));\r\n  },\r\n  delete: ({ endpoint, token = null, contentType = null, success, failure }) => {\r\n    return API.delete(endpoint, setHeaders(token, contentType))\r\n      .then(async (response) => await success(response))\r\n      .catch((error) => failure(error));\r\n  }\r\n};\r\n\r\nexport const handleApiResponse = async (response) => {\r\n\r\n  let result = {};\r\n\r\n  if (response.status === 200) {\r\n    result.status = \"SUCCESS\";\r\n    result.data = await response.data;\r\n  } else if (response.status === 400) {\r\n    result.status = \"FAIL\";\r\n    result.data = await response.data;\r\n  } else {\r\n    result.status = \"FAIL\";\r\n    result.message = \"Could not establish connection.\";\r\n  }\r\n\r\n  // console.log(result)\r\n\r\n\r\n  return result;\r\n}\r\n\r\nexport const handleApiError = (error) => {\r\n\r\n  let result = {};\r\n\r\n  if (error.response) {\r\n    result.status = \"FAIL\";\r\n    result.data = error.response.data;\r\n  } else {\r\n    result.status = \"FAIL\";\r\n    result.message = error.message;\r\n  }\r\n\r\n  return result;\r\n\r\n}\r\n\r\n// Usage Example\r\nconst usageExample = () => {\r\n  ApiRequest.post({\r\n    endpoint: 'auth/login',\r\n    // token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9',\r\n    // contentType: 'application/json',\r\n    data: {},\r\n    success: (response) => { },\r\n    failure: (response) => { }\r\n  });\r\n}"],"names":[],"sourceRoot":""}